name: nshop-docker-ci

on:
  push:
    branches: '*'

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:

      - name: 저장소 Checkout
        uses: actions/checkout@v4

      - name: 자바 17 setup
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      - name: application.yml 파일 생성
        run: |
          mkdir ./src/main/resources # resources 폴더 생성
          cd ./src/main/resources # resources 폴더로 이동
          touch ./application.yml # application.yml 생성
          echo "${{ secrets.YML }}" > ./application.yml # github actions에서 설정한 값을 application.yml 파일에 쓰기
        shell: bash

      - name: application-prod.yml 파일 생성
        run: |
          cd ./src/main/resources # resources 폴더로 이동
          touch ./application-prod.yml # application-prod.yml 생성
          echo "${{ secrets.YML_prod }}" > ./application-prod.yml # github actions에서 설정한 값을 application.yml 파일에 쓰기
        shell: bash

      - name: application-dev.yml 파일 생성
        run: |
          cd ./src/main/resources # resources 폴더로 이동
          touch ./application-dev.yml # application-dev.yml 생성
          echo "${{ secrets.YML_DEV }}" > ./application-dev.yml # github actions에서 설정한 값을 application.yml 파일에 쓰기
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 스프링부트 애플리케이션 빌드 # (1)

        run: ./gradlew clean build -Pprofile=prod

      - name: 도커 이미지 빌드 # (2)
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nshop-repo .
        
      - name: Docker Hub 로그인 # (3)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Hub 퍼블리시 # (4)
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/nshop-repo
      
      - name: EC2 접속 및 도커 컴포즈 실행
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          
          script: |
            cd /home/ubuntu
            docker-compose down
            docker-compose pull
            docker-compose up -d
